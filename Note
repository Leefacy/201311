// define anonymous paramters and functions
(function(){
  //code goes here.
})()

// extend function of jQuery.
var extend = function(){
  var options
    , name
    , src
    , copy
    , copyIsArray
    , clone
    , target = arguments[0]||{}
    , i = 1                                             //
    , length = arguments.length
    , deep = false ;                              // deep copy?
    
    //handle a deep copy situation
    if(typeof target === 'boolean'){
      deep = target;
      target = arguments[1]||{};
      i = 2;
    }
    
    //handle case when target is a string or something(possible in deep copy)
    if(typeof target !=='object'&& !jQuery.isFunctioin(target)){
      target = {};
    }
    
    //extend jQuery iteself if only one argument is passed.
    if(length === i){
      target = this;
      --i;
    }
    
    for(; i < length; i++){
      //Only deal with non-null/undefined values
      if((options = arguments[i]) != null){
        //Extend the base object
        for(name in options){
          src = target[name];
          copy = options[name];
          
          //prevent never-ending loop
          if(target === copy){
            continue;
          }
          
          //Recurse if we are merging plain objects or arrays
          if(deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))){
            if(copyIsArray){
              copyIsArray = false;
              clone = src && jQuery.isArray(src)? src : [];
            } else {
              clone = src && jQuery.isPlainObject(src) ? src : {};
            }
            
            //never move original objects, clone them
            target[name] = jQuery.extend(deep, clone, copy);
            
            //do not bring in undefined values
          } else if(copy != undefined){
            target[name] = copy;
          }
        }
      }
    }
    
    //return the modified object 
    return target;
}
